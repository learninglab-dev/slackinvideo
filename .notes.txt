//
//
// var schema = new Schema(
// {[]
//   name: String,
//   binary: Buffer,
//   living: Boolean,
//   updated: { type: Date, default: Date.now },
//   age: { type: Number, min: 18, max: 65, required: true },
//   mixed: Schema.Types.Mixed,
//   _someId: Schema.Types.ObjectId,
//   array: [],
//   ofString: [String], // You can also have an array of each of the other types too.
//   nested: { stuff: { type: String, lowercase: true, trim: true } }
// })




// Create an instance of model SomeModel
var awesome_instance = new SomeModel({ name: 'awesome' });

// Save the new model instance, passing a callback
awesome_instance.save(function (err) {
  if (err) return handleError(err);
  // saved!
});

// find all athletes who play tennis, selecting the 'name' and 'age' fields
Athlete.find({ 'sport': 'Tennis' }, 'name age', function (err, athletes) {
  if (err) return handleError(err);
  // 'athletes' contains the list of athletes that match the criteria.
})
